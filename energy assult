--GUI

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Energy Assault GUI  by: Poog Foog", "DarkTheme")


local Main = Window:NewTab("Main")
MainSection = Main:NewSection("Main")



MainSection:NewButton("Silent aim", "ButtonInfo", function()
    getgenv().fov = math.huge
    getgenv().hitpart = "Head"
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Spoorloos/scripts/main/energy_assault_silent_aim.lua"))()
end)




MainSection:NewButton("WallBang", "ButtonInfo", function()
    workspace.map.otherparts.Parent = workspace.map.bulletsgothrough
end)




MainSection:NewButton("Speed gui", "ButtonInfo", function()
    local s_rs = game:GetService("RunService")
    local l_plr = game:GetService("Players").LocalPlayer
    
    
    
    local l_humrp = l_plr.Character and l_plr.Character:FindFirstChild("HumanoidRootPart")
    local l_hum = l_plr.Character and l_plr.Character:FindFirstChild("Humanoid")
    
    local resp_con = l_plr.CharacterAdded:Connect(function(c) 
        l_humrp = c:WaitForChild("HumanoidRootPart",3)
        l_hum = c:WaitForChild("Humanoid",3)
    end)
    
    local function dnec(signal) 
        local s = {}
        for _, con in ipairs(getconnections(signal)) do 
            local func = con.Function
            if (func and islclosure(func)) then
                if (not is_synapse_function(func)) then 
                    s[#s+1] = con
                    con:Disable() 
                end
            end
        end
        return s
    end
    
    
    local speed_amnt = 5
    
    local ui = loadstring(game:HttpGet('https://raw.githubusercontent.com/topitbopit/rblx/main/ui-stuff/jeff_2.lua'))()
    ui:SetColors('streamline')
    
    
    
    local w = ui:NewWindow('speed',250,200)
    
    local m = w:NewMenu('speed')
    local t = m:NewToggle('toggle speed')
    local s = m:NewSlider('speed amount',0.5,50,5)
    
    t:SetTooltip("toggles speedhacks")
    s:SetTooltip("speedhack speed")
    
    m:NewLabel()
    m:NewLabel('made by Poog foog')
    
    s.OnValueChanged:Connect(function(v) 
        speed_amnt = v
    end)
    
    do
        local a,b
        t.OnToggle:Connect(function(t)
            if (t) then
                a = dnec(l_humrp.Changed)
                b = dnec(l_humrp:GetPropertyChangedSignal("CFrame"))
                
                s_rs:BindToRenderStep("speed",2000,function(dt)
                    l_humrp.CFrame += l_hum.MoveDirection*dt*5*speed_amnt
                end)
            else
                s_rs:UnbindFromRenderStep("speed")
                
                for i,v in ipairs(a) do 
                    v:Enable()
                end
                for i,v in ipairs(b) do 
                    v:Enable()
                end
            end
        end)
    end
    
    ui.Exiting:Connect(function() 
        for i,v in ipairs(ui:GetAllToggles()) do 
            if (v:IsEnabled()) then
                v:Disable()
            end
        end
        resp_con:Disconnect()
    end)
    
    ui:Ready()
end)





MainSection:NewButton("Aimbot", "ButtonInfo", function()
    local dwCamera = workspace.CurrentCamera
    local dwRunService = game:GetService("RunService")
    local dwUIS = game:GetService("UserInputService")
    local dwEntities = game:GetService("Players")
    local dwLocalPlayer = dwEntities.LocalPlayer
    local dwMouse = dwLocalPlayer:GetMouse()
    
    local settings = {
        Aimbot = true,
        Aiming = false,
        Aimbot_AimPart = "Head",
        Aimbot_TeamCheck = true,
        Aimbot_Draw_FOV = true,
        Aimbot_FOV_Radius = 200,
        Aimbot_FOV_Color = Color3.fromRGB(255,0,255)
    }
    
    local fovcircle = Drawing.new("Circle")
    fovcircle.Visible = settings.Aimbot_Draw_FOV
    fovcircle.Radius = settings.Aimbot_FOV_Radius
    fovcircle.Color = settings.Aimbot_FOV_Color
    fovcircle.Thickness = 2
    fovcircle.Filled = false
    fovcircle.Transparency = .5
    
    fovcircle.Position = Vector2.new(dwCamera.ViewportSize.X / 2, dwCamera.ViewportSize.Y / 2)
    
    dwUIS.InputBegan:Connect(function(i)
        if i.UserInputType == Enum.UserInputType.MouseButton2 then
            settings.Aiming = true
        end
    end)
    
    dwUIS.InputEnded:Connect(function(i)
        if i.UserInputType == Enum.UserInputType.MouseButton2 then
            settings.Aiming = false
        end
    end)
    
    dwRunService.RenderStepped:Connect(function()
        
        local dist = math.huge
        local closest_char = nil
    
        if settings.Aiming then
    
            for i,v in next, dwEntities:GetChildren() do 
    
                if v ~= dwLocalPlayer and
                v.Character and
                v.Character:FindFirstChild("HumanoidRootPart") and
                v.Character:FindFirstChild("Humanoid") and
                v.Character:FindFirstChild("Humanoid").Health > 0 then
    
                    if settings.Aimbot_TeamCheck == true and
                    v.Team ~= dwLocalPlayer.Team or
                    settings.Aimbot_TeamCheck == false then
    
                        local char = v.Character
                        local char_part_pos, is_onscreen = dwCamera:WorldToViewportPoint(char[settings.Aimbot_AimPart].Position)
    
                        if is_onscreen then
    
                            local mag = (Vector2.new(dwMouse.X, dwMouse.Y) - Vector2.new(char_part_pos.X, char_part_pos.Y)).Magnitude
    
                            if mag < dist and mag < settings.Aimbot_FOV_Radius then
    
                                dist = mag
                                closest_char = char
    
                            end
                        end
                    end
                end
            end
    
            if closest_char ~= nil and
            closest_char:FindFirstChild("HumanoidRootPart") and
            closest_char:FindFirstChild("Humanoid") and
            closest_char:FindFirstChild("Humanoid").Health > 0 then
    
                dwCamera.CFrame = CFrame.new(dwCamera.CFrame.Position, closest_char[settings.Aimbot_AimPart].Position)
            end
        end
    end)
end)












MainSection:NewButton("Tracers", "ButtonInfo", function()
    _G.TeamCheck = false
    _G.Tracers = true
    --// local shit stuff i guess \\--
    local lp = game.Players.LocalPlayer
    local camera = game:GetService("Workspace").CurrentCamera
    local CurrentCamera = workspace.CurrentCamera
    local worldToViewportPoint = CurrentCamera.worldToViewportPoint
    for i,v in pairs(game.Players:GetChildren()) do
        local Tracer = Drawing.new("Line")
        Tracer.Visible = false
        Tracer.Color = Color3.new(255,0,255)
        Tracer.Thickness = 2
        Tracer.Transparency = 1
        
        function traces()
            game:GetService("RunService").RenderStepped:Connect(function()
                if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lp and v.Character.Humanoid.Health > 0 then
                    local Vector, OnScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    
                    if OnScreen then
                        Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
                        Tracer.To = Vector2.new(Vector.X, Vector.Y)
                        
                        if _G.TeamCheck and v.TeamColor == lp.TeamColor then
                            Tracer.Visible = false
                        else
                            Tracer.Visible = true
                        end
                    else
                        Tracer.Visible = false
                    end
                else
                    Tracer.Visible = false
                end
                if _G.Tracers == false then
                    Tracers.Visible = false
                end
            end)
        end
        coroutine.wrap(traces)()
    end
    game.Players.PlayerAdded:Connect(function()
        local Tracer = Drawing.new("Line")
        Tracer.Visible = false
        Tracer.Color = Color3.new(255,0,0)
        Tracer.Thickness = 2
        Tracer.Transparency = 2
        
        function traces()
            game:GetService("RunService").RenderStepped:Connect(function()
                if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lp and v.Character.Humanoid.Health > 0 then
                    local Vector, OnScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    if OnScreen then
                        Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
                        Tracer.To = Vector2.new(Vector.X, Vector.Y)
                        
                        if _G.TeamCheck and v.TeamColor == lp.TeamColor then
                            Tracer.Visible = false
                        else
                            Tracer.Visible = true
                        end
                    else
                        Tracer.Visible = false
                    end
                else
                    Tracer.Visible = false
                end
                if _G.Tracers == false then
                    Tracers.Visible = false
                end
            end)
        end
        coroutine.wrap(traces)()
    end)
end)







MainSection:NewButton("ESP", "ButtonInfo", function()
    game:GetService("StarterGui"):SetCore("SendNotification",{ 	
        Title = "Made By:",  	
        Text = "AdvancedFalling Team",
            Icon = "rbxthumb://type=Asset&id=9863339777&w=150&h=150",
            Duration = 8
        })
        
        --// Setting \\--
        local settings = {
           defaultcolor = Color3.fromRGB(255,0,255),
           teamcheck = false, -- when true it wont show the esp box in your teammate
           teamcolor = true, -- if false then default color(white)
        };
        
        --// Service \\--
        local runService = game:GetService("RunService");
        local players = game:GetService("Players");
        
        --// Variable \\--
        local localPlayer = players.LocalPlayer;
        local camera = workspace.CurrentCamera;
        
        --// Function \\--
        local newVector2, newColor3, newDrawing = Vector2.new, Color3.new, Drawing.new;
        local tan, rad = math.tan, math.rad;
        local round = function(...) local a = {}; for i,v in next, table.pack(...) do a[i] = math.round(v); end return unpack(a); end;
        local wtvp = function(...) local a, b = camera.WorldToViewportPoint(camera, ...) return newVector2(a.X, a.Y), b, a.Z end;
        
        local espCache = {};
        local function createEsp(player)
           local drawings = {};
           
           drawings.box = newDrawing("Square");
           drawings.box.Thickness = 1;
           drawings.box.Filled = false;
           drawings.box.Color = settings.defaultcolor;
           drawings.box.Visible = false;
           drawings.box.ZIndex = 2;
        
           drawings.boxoutline = newDrawing("Square");
           drawings.boxoutline.Thickness = 4;
           drawings.boxoutline.Filled = false;
           drawings.boxoutline.Color = newColor3();
           drawings.boxoutline.Visible = false;
           drawings.boxoutline.ZIndex = 0.5;
        
           espCache[player] = drawings;
        end
        
        local function removeEsp(player)
           if rawget(espCache, player) then
               for _, drawing in next, espCache[player] do
                   drawing:Remove();
               end
               espCache[player] = nil;
           end
        end
        
        local function updateEsp(player, esp)
           local character = player and player.Character;
           if character then
               local cframe = character:GetModelCFrame();
               local position, visible, depth = wtvp(cframe.Position);
               esp.box.Visible = visible;
               esp.boxoutline.Visible = visible;
        
               if cframe and visible then
                   local scaleFactor = 1 / (depth * tan(rad(camera.FieldOfView / 2)) * 2) * 1000;
                   local width, height = round(4 * scaleFactor, 5 * scaleFactor);
                   local x, y = round(position.X, position.Y);
        
                   esp.box.Size = newVector2(width, height);
                   esp.box.Position = newVector2(round(x - width / 2, y - height / 2));
                   esp.box.Color = settings.teamcolor and player.TeamColor.Color or settings.defaultcolor;
        
                   esp.boxoutline.Size = esp.box.Size;
                   esp.boxoutline.Position = esp.box.Position;
               end
           else
               esp.box.Visible = false;
               esp.boxoutline.Visible = false;
           end
        end
        
        --// Main \\--
        for _, player in next, players:GetPlayers() do
           if player ~= localPlayer then
               createEsp(player);
           end
        end
        
        players.PlayerAdded:Connect(function(player)
           createEsp(player);
        end);
        
        players.PlayerRemoving:Connect(function(player)
           removeEsp(player);
        end)
        
        runService:BindToRenderStep("esp", Enum.RenderPriority.Camera.Value, function()
           for player, drawings in next, espCache do
               if settings.teamcheck and player.Team == localPlayer.Team then
                   continue;
               end
                    
               if drawings and player ~= localPlayer then
                   updateEsp(player, drawings);
               end
           end
        end)
end)
