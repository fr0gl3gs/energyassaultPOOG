--GUI

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Energy Assault GUI  by: Poog Foog", "DarkTheme")


local Main = Window:NewTab("Main")
MainSection = Main:NewSection("Main")



MainSection:NewButton("Silent aim", "ButtonInfo", function()
    getgenv().fov = math.huge
    getgenv().hitpart = "Head"
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Spoorloos/scripts/main/energy_assault_silent_aim.lua"))()
end)




MainSection:NewButton("WallBang", "ButtonInfo", function()
    workspace.map.otherparts.Parent = workspace.map.bulletsgothrough
end)




MainSection:NewButton("Speed gui", "ButtonInfo", function()
    local s_rs = game:GetService("RunService")
    local l_plr = game:GetService("Players").LocalPlayer
    
    
    
    local l_humrp = l_plr.Character and l_plr.Character:FindFirstChild("HumanoidRootPart")
    local l_hum = l_plr.Character and l_plr.Character:FindFirstChild("Humanoid")
    
    local resp_con = l_plr.CharacterAdded:Connect(function(c) 
        l_humrp = c:WaitForChild("HumanoidRootPart",3)
        l_hum = c:WaitForChild("Humanoid",3)
    end)
    
    local function dnec(signal) 
        local s = {}
        for _, con in ipairs(getconnections(signal)) do 
            local func = con.Function
            if (func and islclosure(func)) then
                if (not is_synapse_function(func)) then 
                    s[#s+1] = con
                    con:Disable() 
                end
            end
        end
        return s
    end
    
    
    local speed_amnt = 5
    
    local ui = loadstring(game:HttpGet('https://raw.githubusercontent.com/topitbopit/rblx/main/ui-stuff/jeff_2.lua'))()
    ui:SetColors('streamline')
    
    
    
    local w = ui:NewWindow('speed',250,200)
    
    local m = w:NewMenu('speed')
    local t = m:NewToggle('toggle speed')
    local s = m:NewSlider('speed amount',0.5,50,5)
    
    t:SetTooltip("toggles speedhacks")
    s:SetTooltip("speedhack speed")
    
    m:NewLabel()
    m:NewLabel('made by Poog foog')
    
    s.OnValueChanged:Connect(function(v) 
        speed_amnt = v
    end)
    
    do
        local a,b
        t.OnToggle:Connect(function(t)
            if (t) then
                a = dnec(l_humrp.Changed)
                b = dnec(l_humrp:GetPropertyChangedSignal("CFrame"))
                
                s_rs:BindToRenderStep("speed",2000,function(dt)
                    l_humrp.CFrame += l_hum.MoveDirection*dt*5*speed_amnt
                end)
            else
                s_rs:UnbindFromRenderStep("speed")
                
                for i,v in ipairs(a) do 
                    v:Enable()
                end
                for i,v in ipairs(b) do 
                    v:Enable()
                end
            end
        end)
    end
    
    ui.Exiting:Connect(function() 
        for i,v in ipairs(ui:GetAllToggles()) do 
            if (v:IsEnabled()) then
                v:Disable()
            end
        end
        resp_con:Disconnect()
    end)
    
    ui:Ready()
end)





MainSection:NewButton("Aimbot", "ButtonInfo", function()
    local dwCamera = workspace.CurrentCamera
    local dwRunService = game:GetService("RunService")
    local dwUIS = game:GetService("UserInputService")
    local dwEntities = game:GetService("Players")
    local dwLocalPlayer = dwEntities.LocalPlayer
    local dwMouse = dwLocalPlayer:GetMouse()
    
    local settings = {
        Aimbot = true,
        Aiming = false,
        Aimbot_AimPart = "Head",
        Aimbot_TeamCheck = true,
        Aimbot_Draw_FOV = true,
        Aimbot_FOV_Radius = 200,
        Aimbot_FOV_Color = Color3.fromRGB(255,255,255)
    }
    
    local fovcircle = Drawing.new("Circle")
    fovcircle.Visible = settings.Aimbot_Draw_FOV
    fovcircle.Radius = settings.Aimbot_FOV_Radius
    fovcircle.Color = settings.Aimbot_FOV_Color
    fovcircle.Thickness = 1
    fovcircle.Filled = false
    fovcircle.Transparency = 1
    
    fovcircle.Position = Vector2.new(dwCamera.ViewportSize.X / 2, dwCamera.ViewportSize.Y / 2)
    
    dwUIS.InputBegan:Connect(function(i)
        if i.UserInputType == Enum.UserInputType.MouseButton2 then
            settings.Aiming = true
        end
    end)
    
    dwUIS.InputEnded:Connect(function(i)
        if i.UserInputType == Enum.UserInputType.MouseButton2 then
            settings.Aiming = false
        end
    end)
    
    dwRunService.RenderStepped:Connect(function()
        
        local dist = math.huge
        local closest_char = nil
    
        if settings.Aiming then
    
            for i,v in next, dwEntities:GetChildren() do 
    
                if v ~= dwLocalPlayer and
                v.Character and
                v.Character:FindFirstChild("HumanoidRootPart") and
                v.Character:FindFirstChild("Humanoid") and
                v.Character:FindFirstChild("Humanoid").Health > 0 then
    
                    if settings.Aimbot_TeamCheck == true and
                    v.Team ~= dwLocalPlayer.Team or
                    settings.Aimbot_TeamCheck == false then
    
                        local char = v.Character
                        local char_part_pos, is_onscreen = dwCamera:WorldToViewportPoint(char[settings.Aimbot_AimPart].Position)
    
                        if is_onscreen then
    
                            local mag = (Vector2.new(dwMouse.X, dwMouse.Y) - Vector2.new(char_part_pos.X, char_part_pos.Y)).Magnitude
    
                            if mag < dist and mag < settings.Aimbot_FOV_Radius then
    
                                dist = mag
                                closest_char = char
    
                            end
                        end
                    end
                end
            end
    
            if closest_char ~= nil and
            closest_char:FindFirstChild("HumanoidRootPart") and
            closest_char:FindFirstChild("Humanoid") and
            closest_char:FindFirstChild("Humanoid").Health > 0 then
    
                dwCamera.CFrame = CFrame.new(dwCamera.CFrame.Position, closest_char[settings.Aimbot_AimPart].Position)
            end
        end
    end)
end)



Section:NewButton(" Name ESP", "ButtonInfo", function()
    local nameState = false
    local localPlayer = game.Players.LocalPlayer
    local CurrentCamera = workspace.CurrentCamera
    local camera = game:GetService("Workspace").CurrentCamera
    local HeadOff = Vector3.new(0,1,0) --the 1 here is the height of the name esp
    local worldToViewportPoint = CurrentCamera.worldToViewportPoint
    
    function esp_function(v)
        local text = Drawing.new("Text")
        text.Visible = false
        text.Center = true
        text.Outline = true
        text.Font = 2
        text.Color = Color3.new(1,1,1)
        text.Size = 13
        game:GetService("RunService").RenderStepped:Connect(function()
            if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= localPlayer and v.Character.Humanoid.Health > 0 then
    
                local Head = v.Character.Head
                local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff)
                if onScreen then
                    text.Position = Vector2.new(HeadPosition.X, HeadPosition.Y)
                    text.Text = v.DisplayName
                    text.Visible = nameState
                else
                    text.Visible = false
                end
            else
                text.Visible = false
            end
    
        end)
    end
    
    for i, v in pairs(game.Players:GetChildren()) do
        coroutine.wrap(esp_function)(v)
    end
    
    game.Players.PlayerAdded:Connect(function()
        coroutine.wrap(esp_function)(v)
    end)
    
    section:Toggle{Name = "Name Esp",Flag = "Toggle 1",Callback  = function(bool)
            nameState = bool
        end
    }
    
    section:Keybind{
    Name = "UI Toggle",
    Flag = "UI Toggle",
    Default = Enum.KeyCode.RightShift,
    Blacklist = {Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2, Enum.UserInputType.MouseButton3},
    Callback = function(_, fromsetting)
        if not fromsetting then
            library:Close()
        end
    end
    }
end)







